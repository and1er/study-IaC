# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # Do not deploy default vagrant SSH-key.
  config.ssh.insert_key = false

  # web --- load balancer host.
  config.vm.define "web" do |web|
    web.vm.box = "ubuntu/focal64"
    # web.vm.box = "centos/8"
    web.vm.hostname = "web"
    web.vm.network :private_network, ip: "192.168.30.11"
    web.vm.synced_folder ".", "/vagrant", disabled: true
    web.vm.provider :virtualbox do |vb|
      vb.name = "web_ubuntu_20"
      # vb.name = "web_centos_8"
      vb.cpus = 1
      vb.memory = 1024
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      vb.customize ["modifyvm", :id, "--ioapic", "on"]
    end
  end

  # Database host.
  config.vm.define "db" do |db|
    db.vm.box = "ubuntu/focal64"
    db.vm.hostname = "db"
    db.vm.network :private_network, ip: "192.168.30.12"
    db.vm.synced_folder ".", "/vagrant", disabled: true
    db.vm.provider :virtualbox do |vb|
      vb.name = "db_ubuntu_20"
      vb.cpus = 2
      vb.memory = 1024
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      vb.customize ["modifyvm", :id, "--ioapic", "on"]
    end
  end

  # Application hosts.
  APP_HOSTS_COUNT = 2
  (1..APP_HOSTS_COUNT).each do |app_host_id|
    config.vm.define "app#{app_host_id}" do |app|
      app.vm.box = "ubuntu/focal64"
      app.vm.hostname = "app#{app_host_id}"
      app.vm.network "private_network", ip: "192.168.30.#{20+app_host_id}"
      app.vm.synced_folder ".", "/vagrant", disabled: true
      app.vm.provider :virtualbox do |vb|
        vb.name = "app#{app_host_id}_ubuntu_20"
        vb.cpus = 2
        vb.memory = 1024
        vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        vb.customize ["modifyvm", :id, "--ioapic", "on"]
      end
    end
  end

  # Deploy own SSH-keys.
  config.vm.provision "file", source: "./authorized_keys", destination: "/home/vagrant/.ssh/authorized_keys"
end
